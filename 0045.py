"""
Project Euler Problem 45
========================

Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

Triangle     T[n]=n(n+1)/2   1, 3, 6, 10, 15, ...
Pentagonal   P[n]=n(3n-1)/2  1, 5, 12, 22, 35, ...
Hexagonal    H[n]=n(2n-1)    1, 6, 15, 28, 45, ...

It can be verified that T[285] = P[165] = H[143] = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""
import math

# copied from problem 44
# checks if given integer x is a pentagonal number
def is_pentagonal(x):
    n = (1 + math.sqrt(24 * x + 1)) / 6
    if n == math.floor(n):
        return True
    return False

# checks if given integer x is hexagonal
def is_hexagonal(x):
    n = (math.sqrt(8*x+1) + 1) / 4
    if n == math.floor(n):
        return True
    return False


triangle_gen = (int((n*(n+1))/2) for n in range(286, 100000))
next_num = next(triangle_gen)
while not (is_pentagonal(next_num) and is_hexagonal(next_num)):
    next_num = next(triangle_gen)

print(next_num)

